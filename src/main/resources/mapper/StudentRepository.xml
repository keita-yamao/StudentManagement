<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.StudentManagement.repository.StudentRepository">

  <!--受講生の全件検索-->
  <select id="searchStudent" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM students
  </select>

  <!--受講生をstudent_idで検索-->
  <select id="searchStudentById" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM students WHERE Student_id=#{studentId} AND is_deleted = FALSE
  </select>

  <!--受講生の絞り込み検索-->
  <select id="searchFilterStudent" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM students WHERE 1=1
    <if test="name != null and name !='' ">
      AND name LIKE CONCAT ('%',#{name},'%')
    </if>
    <if test="furigana != null">
      AND furigana LIKE CONCAT ('%',#{furigana},'%')
    </if>
    <if test="isDeleted == true">
      AND is_deleted = true
    </if>
    <if test="isDeleted == false">
      AND is_deleted = false
    </if>
    <if test="minAge != null">
      AND age &gt;= #{minAge}
    </if>
    <if test="maxAge != null">
      AND age &lt;= #{maxAge}
    </if>
  </select>

  <!--コース情報の全件検索-->
  <select id="searchCourses" resultType="raisetech.StudentManagement.data.Course">
    SELECT * FROM courses
  </select>

  <!--受講コース情報の全件検索-->
  <select id="searchStudentsCourses" resultType="raisetech.StudentManagement.data.StudentsCourses">
    SELECT * FROM students_courses
  </select>

  <!--受講コース情報の絞り込み検索-->
  <select id="searchFilterStudentsCourses"
    resultType="raisetech.StudentManagement.data.StudentsCourses">
    SELECT * FROM students_courses WHERE 1=1
    <if test="courseId != null">
      AND course_id = #{courseId}
    </if>
  </select>

  <!--受講情報の追加-->
  <insert id="insertStudent">
    INSERT INTO students (student_id,name,furigana,nickname,email,address,age,gender,is_deleted)
    VALUES
    (#{studentId},#{name},#{furigana},#{nickname},#{email},#{address},#{age},#{gender},#{isDeleted})
  </insert>

  <!--受講情報の追加-->
  <insert id="insertStudentCourse">
    INSERT INTO students_courses (student_id,course_id,start_date,expected_completion_date)
    VALUES (#{studentId},#{courseId},#{startDate},#{expectedCompletionDate})
  </insert>

  <!--受講生情報の更新-->
  <update id="updateStudent">
    UPDATE students SET
    name=#{name},furigana=#{furigana},nickname=#{nickname},email=#{email},address=#{address},age=#{age},gender=#{gender},is_deleted
    =#{isDeleted} WHERE student_id=#{studentId}
  </update>

  <!--受講情報の更新-->
  <update id="updateStudentCourses">
    UPDATE students_courses SET course_id=#{courseId} WHERE id=#{id}
  </update>
</mapper>
